<?php
/**
 * @author Mustapha <bouarfamus@gmail.com>
 */
?>
<?php
$perPage = $this->getStoreConfigPerPageValue();
$travalImg = $this->getViewFileUrl('Whiteapp_ShopFinder::images/sprite-icon.png');
$totalStores = count($this->getAllStores());
$totalPage = ceil($totalStores / $perPage);

if(isset( $_GET['page'] ))
{
  $_curPage = $_GET['page'];
}
else
{
  $_curPage = 1;
}
$html = '';
if($totalPage > 0)
{
  $html = '<ul class="mainUL">';
if ($_curPage < 1)
{
  $prevPage = $_curPage - 1;
  $html   .= "<li class='prevOne'> <a href='?page=$prevPage'><</a> </li>";
  $html   .= "<li class='prevDouble'> <a href='?page=1'><<</a> </li>";
}
for($l=1; $l<$totalPage; $l++)
{
  $html   .= '<li class="pageList"><a href="?page=' . $l . '">' .$l. '</a></li>';
}
//if ($_curPage != $totalPage)
//echo "cur=> ".$_curPage." total=> ".$totalPage;exit();
if ($_curPage != $totalPage)
{
  $nextPage = $_curPage + 1;
  $html   .= "<li class='nextOne'> <a href='?page=$nextPage'>></a> </li>";
  $html   .= "<li class='nextDouble'> <a href='?page=$totalPage'>>></a> </li>";
}
$html   .= '</ul>';
}

$stores  = $this->getAllStores()->addFieldToFilter('is_active',1)->setPageSize($perPage)->setCurPage($_curPage);
$listAll = array();
$i = 0;
$lt = 23.5154;
$lg = 72.156045;
foreach($stores as $_store)
{
  $storeId = $_store->getShopfinderId();
  $name = $_store->getTitle();
  $address = $_store->getAddress();
  $title = $_store->getTitle();
  $lt = $_store->getLatitude();
  $lg = $_store->getLongitude();
  $listAll[] = array($name,$lt,$lg,$i,$address);
  $i++;
}
?>
<script
        src="https://maps.googleapis.com/maps/api/js?key=<?php echo $this->getGoogleApiKey(); ?>&libraries=places&callback=init">
</script>

<script>
var map;
var markers = [];
var markersArray = [];
var infoWindow;
var locationSelect;
var locations ;

function init()
{
  require([
        "jquery",

    ], function($){
      $('#map1').hide();
      $('#map').show();
    });
  var latCheck = '<?php echo $totalStores; ?>';
  if(latCheck)
  {
    var haightAshbury = {lat: <?php echo $lt?>, lng: <?php echo $lg?>};
    map = new google.maps.Map(document.getElementById("map"), {
      center: new google.maps.LatLng(<?php echo $lt?>, <?php echo $lg?>),
      zoom: 10,
      streetViewControl: true,
      scaleControl: true,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      mapTypeControlOptions: {style: google.maps.MapTypeControlStyle.DROPDOWN_MENU}
    });
    infoWindow = new google.maps.InfoWindow();
    var marker, i;
    locations = <?php echo json_encode($listAll); ?>;
    for(j=0; j<locations.length; j++)
    {
      var addressHtml = "<b>" + locations[j][0] + "</b> <br/>" + locations[j][3];
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations[j][1], locations[j][2]),
        title: locations[j][0],
        map: map
      });
      addMarker(haightAshbury);
      google.maps.event.addListener(marker, 'click', (function(marker, j) {
        return function() {
          infowindow.setContent(addressHtml);
          infowindow.open(map, marker);
        }
      })(marker, j));
    }
    autocomplete = new google.maps.places.Autocomplete(
      (document.getElementById('startText')),
      {types: ['geocode']});
  }
  else
  {
    map = new google.maps.Map(document.getElementById("map"), {
      zoom: 10,
      streetViewControl: true,
      scaleControl: true,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      mapTypeControlOptions: {style: google.maps.MapTypeControlStyle.DROPDOWN_MENU}
    });
  }
}

function searchLocations(shopfinderid)
{
  jQuery('.'+shopfinderid).click();
  /*var address = document.getElementById("addressInput").value;
  require([
        "jquery",
    ], function($){
    if(address != '')
    {
      var geocoder = new google.maps.Geocoder();
      geocoder.geocode({address: address}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          //alert(results[0].geometry.location);
          searchLocationsMap(results[0].geometry.location,address);
          //searchLocationsMap((28.150514, -82.008782),address);
        }else{
          alert(address + ' not found');
        }
      });
    }
  });*/
}

function addMarker(location)
{
  var marker1 = new google.maps.Marker({
    position: location,
    map: map
  });
  markersArray.push(marker1);
}
function removeMarkers()
{
  for(var j=0; j<markersArray.length; j++){
      markersArray[j].setMap(null);
  }
  markersArray = [];
}
function clearLocations()
{
  for (var i = 0; i < markersArray.length; i++) {

    markersArray[i].setMap(null);
  }
}
function searchLocationsMap(center,address)
{
  var layer;
  var searchUrl = '<?php echo $this->getUrl('shopfinder/index/searchglobal');?>?lat=' + center.lat() + '&lng=' + center.lng();// + '&radius=' + radius;
  alert(searchUrl);
  var bounds = new google.maps.LatLngBounds();
  var latlng = new google.maps.LatLng(parseFloat(center.lat()),parseFloat(center.lng()));
  createMarker(latlng, address);
  bounds.extend(latlng);
  map.fitBounds(bounds);
  zoomChangeBoundsListener =
  google.maps.event.addListenerOnce(map, 'bounds_changed', function(event) {
    if (this.getZoom()){
      this.setZoom(16);
    }
  });
  setTimeout(function(){google.maps.event.removeListener(zoomChangeBoundsListener)}, 2000);
}
function searchLocationsNear(center)
{
  var searchUrl = '<?php echo $this->getUrl('shopfinder/index/search');?>?lat=' + center.lat() + '&lng=' + center.lng();// + '&radius=' + radius;
}

function createMarker(latlng, name, address) {
  var html = "<b>" + name + "</b> <br/>" + address;
  var marker = new google.maps.Marker({
    map: map,
    position: latlng,
    animation: google.maps.Animation.DROP
  });
  google.maps.event.addListener(marker, 'click', function() {
  infoWindow.setContent(html);
  infoWindow.open(map, marker);
  });
  markers.push(marker);
}

function createOption(name, distance, num) {
  var option = document.createElement("option");
  option.value = num;
  option.innerHTML = name + "(" + distance.toFixed(1) + ")";
  locationSelect.appendChild(option);
}

function parseXml(str)
{
  if (window.ActiveXObject)
  {
    var doc = new ActiveXObject('Microsoft.XMLDOM');
    doc.loadXML(str);
    return doc;
  }
  else if (window.DOMParser)
  {
    return (new DOMParser).parseFromString(str, 'text/xml');
  }
}
function doNothing(){}
google.maps.event.addDomListener(window, 'load', init);
</script>

<script type="text/javascript">
function selectOption(element)
{
  require([
        "jquery",

    ], function($){

    $('#addressInput').val(element.innerHTML);
    $('.tt-dropdown-menu').hide();
  });
  jQuery('#searchlocations').prop('disabled', false);
}
function autoText(textvalue)
{
  jQuery('#searchlocations').prop('disabled', true);
  require([
      "jquery",

  ], function($){
    $('.tt-dropdown-menu').hide()
    if(textvalue.value != ''){
      $('#loading').show();
        $.ajax({
          type: "POST",
          url: "<?php echo $this->getUrl('shopfinder/index/autosuggest/'); ?>",
          data: {searchValue : textvalue.value},
          success: function (data) {
            $('#loading').hide();
            $('.tt-suggestions').html(data)
            $('.tt-dropdown-menu').show()
        }
      });
    }
  });
}
</script>
<script type="text/javascript">

var circle = '';
var i = 0;
function geMap(center,lat,lang,name,address1)
{
  i++;
  require([
      "jquery",

  ], function($){
    $('#map1').hide();
    $('#map').show();
  });
  var storeId = center;
  var lat = lat;
  var lang = lang;
  var name = name;
  var address = address1;
  var bounds = new google.maps.LatLngBounds();
  var center = new google.maps.LatLng(lat, lang);

  map = new google.maps.Map(document.getElementById("map"), {
      zoom: 10,
      streetViewControl: true,
      scaleControl: true,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      mapTypeControlOptions: {style: google.maps.MapTypeControlStyle.DROPDOWN_MENU}
    });

  var mapAttr = {
      center: center,
      zoom: 10,
      mapTypeId: google.maps.MapTypeId.TERRAIN
  };

  if(i > 1){
    circle.setMap(null);
  }

  circle = new google.maps.Circle({
      center: center,
      map: map,
      radius: 1000,          // IN METERS.
      fillColor: '#FF6600',
      fillOpacity: 0.2,
      strokeColor: "#FFF",
      strokeWeight: 0,         // DON'T SHOW CIRCLE BORDER.
      editable: true
  });

  var latlng = new google.maps.LatLng(parseFloat(lat),parseFloat(lang));
  createMarker(latlng, name, address);
  bounds.extend(latlng);
  map.fitBounds(bounds);
  zoomChangeBoundsListener =
    google.maps.event.addListenerOnce(map, 'bounds_changed', function(event) {
      if (this.getZoom()){
          this.setZoom(15);
      }
    });
  setTimeout(function(){google.maps.event.removeListener(zoomChangeBoundsListener)}, 2000);
}
function getStreet(lat,lang)
{
  require([
      "jquery",

  ], function($){
      $('#map').hide();
      $('#map1').show()
  });
  var lati = lat;
  var langi = lang;
  var fenway = {lat: lati, lng: langi};

  var panorama = new google.maps.StreetViewPanorama(
      document.getElementById('map1'), {
        position: fenway,
        pov: {heading: 34,pitch: 10},
        panControl: true
      });
  map.setStreetView(panorama);
}
</script>
<script>
function displayRouteTextboxDiv(lt,lang,address) {
    require([
      "jquery",

    ], function($){
        $('#direction_controller').show()
        $('#option-direction').show();
        $('#endText').val(address);
        $('#destinationLat').val(lt);
        $('#destinationLang').val(lang);
    });
}
</script>
<script type="text/javascript">
function geolocate()
{
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var geolocation = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      var circle = new google.maps.Circle({
        center: geolocation,
        radius: position.coords.accuracy
      });
      autocomplete.setBounds(circle.getBounds());
    });
  }
}
</script>
<script type="text/javascript">
function getSourceAddressLatLong()
{
  require([
      "jquery",

    ], function($){
      var startText = $('#startText').val();
      //console.log('startText=> '+startText);
      var destinationRountLat = $('#destinationLat').val();
      var destinationRountLng = $('#destinationLang').val();
      var mode;
      if(startText)
      {
        geocoder = new google.maps.Geocoder();
        if (geocoder) {
            geocoder.geocode({
                'address': startText
            }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                  displayRoutesInMap(results[0].geometry.location,destinationRountLat,destinationRountLng,'DRIVING');
                }
            });
        }
      }
      else
      {
        alert('Please enter source location..!');
      }
    });
}
function displayRoutesInMap(latlong,destinationRountLat,destinationRountLng,traMode)
{
  require([
      "jquery",

    ], function($){
    removeMarkers();
    var directionsService = new google.maps.DirectionsService;
    var directionsDisplay = new google.maps.DirectionsRenderer;
    //directionsDisplay.setMap(null);
    $('#sourceLat').val(latlong.lat());
    $('#sourceLang').val(latlong.lng());
    var start = new google.maps.LatLng(latlong.lat(),latlong.lng());
    var end = new google.maps.LatLng(destinationRountLat, destinationRountLng);
    var request;

    map1 = new google.maps.Map(document.getElementById("map"), {
      center: new google.maps.LatLng(destinationRountLat, destinationRountLng),
      zoom: 10,
      streetViewControl: true,
      scaleControl: true,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      mapTypeControlOptions: {style: google.maps.MapTypeControlStyle.DROPDOWN_MENU}
    });

    if(traMode == 'DRIVING')
    {
      request = {
            origin: start,
            destination: end,
            travelMode:google.maps.TravelMode.DRIVING,
      };
    }
    else if(traMode =='BICYCLING')
    {
      request = {
            origin: start,
            destination: end,
            travelMode:google.maps.TravelMode.BICYCLING,
      };
    }
    else if(traMode == 'TRANSIT')
    {
      request = {
            origin: start,
            destination: end,
            travelMode:google.maps.TravelMode.TRANSIT,
      };
    }
    else if(traMode == 'WALKING')
    {
      request = {
            origin: start,
            destination: end,
            travelMode:google.maps.TravelMode.WALKING,
      };
    }
    directionsService.route(request, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setMap(map1);
        directionsDisplay.setDirections(response);

        $('#direction_controller').hide();
      } else {
        alert("Directions Request from " + start.toUrlValue(6) + " to " + end.toUrlValue(6) + " failed: " + status);
      }
    });
  });
}
function getTravelMode(TravelMode)
{
  require([
      "jquery",

    ], function($){
    var img = '<?php echo $travalImg; ?>';
    var id = $(TravelMode).attr('data-id');
    if(id == 'driving') // transit  walking  bicycling
    {
      $('.custom-popup ul.vertical li.car.active').css("background", "url('"+img+"') no-repeat center -60px");
      $('.custom-popup ul.vertical li.bus').css("background", "url('"+img+"') no-repeat center -80px");
      $('.custom-popup ul.vertical li.walk').css("background", "url('"+img+"') no-repeat center -120px");
      $('.custom-popup ul.vertical li.bicycle').css("background", "url('"+img+"') no-repeat center -160px");
    }
    else if(id == 'transit') // transit  walking  bicycling
    {
      $('.custom-popup ul.vertical li.bus').css("background", "url('"+img+"') no-repeat center -100px");
      $('.custom-popup ul.vertical li.car.active').css("background", "url('"+img+"') no-repeat center -40px");
      $('.custom-popup ul.vertical li.walk').css("background", "url('"+img+"') no-repeat center -120px");
      $('.custom-popup ul.vertical li.bicycle').css("background", "url('"+img+"') no-repeat center -160px");
    }
    else if(id == 'walking') // transit  walking  bicycling
    {
      $('.custom-popup ul.vertical li.walk').css("background", "url('"+img+"') no-repeat center -140px");
      $('.custom-popup ul.vertical li.car.active').css("background", "url('"+img+"') no-repeat center -40px");
      $('.custom-popup ul.vertical li.bus').css("background", "url('"+img+"') no-repeat center -80px");
      $('.custom-popup ul.vertical li.bicycle').css("background", "url('"+img+"') no-repeat center -160px");
    }
    else if(id == 'bicycling') // transit  walking  bicycling
    {
      $('.custom-popup ul.vertical li.bicycle').css("background", "url('"+img+"') no-repeat center -180px");
      $('.custom-popup ul.vertical li.car.active').css("background", "url('"+img+"') no-repeat center -40px");
      $('.custom-popup ul.vertical li.bus').css("background", "url('"+img+"') no-repeat center -80px");
      $('.custom-popup ul.vertical li.walk').css("background", "url('"+img+"') no-repeat center -120px");
    }
    var startText = $('#startText').val();
    var destinationRountLat = $('#destinationLat').val();
    var destinationRountLng = $('#destinationLang').val();
    var traMode = $(TravelMode).attr('data-value');
    if(startText)
    {
      geocoder = new google.maps.Geocoder();
      if (geocoder) {
          geocoder.geocode({
              'address': startText
          }, function (results, status) {
              if (status == google.maps.GeocoderStatus.OK) {
                displayRoutesInMap(results[0].geometry.location,destinationRountLat,destinationRountLng,traMode);
              }
          });
      }
    }
  });
}
function addressSwap()
{
  require([
      "jquery",

    ], function($){
      var startText = $('#startText').val(); // shivr
      var endText = $('#endText').val();      // whiteapp
      if(startText)
      {
        $('#startText').val(endText);
        $('#endText').val(startText);

      }
   });
}
</script>
<?php

  $loadingImg = $this->getViewFileUrl('Whiteapp_ShopFinder::images/loading.gif');
  $mapImg = $this->getViewFileUrl('Whiteapp_ShopFinder::images/image-map.png');
  $listImg = $this->getViewFileUrl('Whiteapp_ShopFinder::images/list.png');
  $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
  $imgPath = $objectManager->get('Magento\Store\Model\StoreManagerInterface')->getStore()->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA);
 ?>
<div class="field">
  <div class="content">
    <div class="control" style="position: relative;">
      <input type="text" id="addressInput" placeholder="Enter a Location to Search" class="city" onkeyup="autoText(this)"/>
      <span class="tt-dropdown-menu" style="position: absolute; top: 65%; left: 0px; z-index: 100; right: auto; display:none;"><div class="tt-dataset-city" style=""><span class="tt-suggestions" style=""></span></div></span>
      <button id="searchlocations" type="submit" onclick="searchLocations()" class="action submit primary" disabled>Search</button>
    </div>
    <div id="loading">
      <img src="<?php echo $loadingImg; ?>" height="100px"/>
    </div>
  </div>
</div>
<div class="mapstoreList">
  <div class="storeList">
    <div class="title-list">
      <h2><img src="<?php echo $listImg; ?>"> <span>Store List</span> <p style="float: right;"><span><?php echo count($this->getAllStores()->addFieldToFilter('is_active',1)->getData()); ?> Stores</span></p></h2>
    </div>
    <ul id="list-store-detail">
      <?php
        foreach($stores as $_store)
        {
          $storeId = $_store->getShopfinderId();
          $name = $_store->getTitle();
          $address = $_store->getAddress();
          $imgMap = $_store->getImage();
          $adrs = preg_replace("/\s+/", " ", $address);
          $lt = $_store->getLatitude();
          $lg = $_store->getLongitude();
          $title = $_store->getTitle(); ?>
          <li class="el-content" index="0">
          <div class="mainBox" style="width:100%;float:left;">
            <div class='imgMap' style="width: 30%;float: left;margin-right: 10px;">
              <a href='javascript:void(0);' class="view-detail <?php echo $storeId; ?>" onclick="geMap(<?php echo $storeId; ?>,<?php echo $lt; ?>,<?php echo $lg; ?>,<?php echo "'".$name."'"; ?>,<?php echo "'".$adrs."'"; ?>);"><img src="<?php echo $imgPath.$imgMap; ?>">
              </a>
            </div>

            <div class="contentArea" style="width:60%;float:left;">
              <h4><a href='javascript:void(0);' class="view-detail <?php echo $storeId; ?>" onclick="geMap(<?php echo $storeId; ?>,<?php echo $lt; ?>,<?php echo $lg; ?>,<?php echo "'".$name."'"; ?>,<?php echo "'".$adrs."'"; ?>);"><?php echo $name; ?></a></h4>
              <p class="address-store"><?php echo $address; ?></p>
              <span class="btn btn-link street-view" onclick="getStreet(<?php echo $lt; ?>,<?php echo $lg; ?>);">Street View</span>
              <span class="btn btn-link direction" onclick="displayRouteTextboxDiv(<?php echo $lt; ?>,<?php echo $lg; ?>,<?php echo "'".$adrs."'" ?>);">Direction</span>
            </div>
          </div>
          </li>
      <?php  }
      ?>
    </ul>
    <div class="customPager"> <?php echo $html; ?> </div>
  </div>
  <div class="map-wrapper">
    <div id="map" class="store-map"></div>
    <div id="map1" class="store-map"></div>

    <div id="direction_controller" class="direction-controller" style="display:none">
      <div class="custom-popup col-xs-12" id="option-direction" style="padding: 0; display: none">
          <ul class="vertical"><!-- getDrivingRoute -->
              <li class="travel car active" data-id="driving" data-value="DRIVING" onclick="getTravelMode(this);"><span>A</span></li>
              <li class="travel bus" data-id="transit" data-value="TRANSIT" onclick="getTravelMode(this);"><span>A</span></li>
              <li class="travel walk" data-id="walking" data-value="WALKING" onclick="getTravelMode(this);"><span>A</span></li>
              <!-- <li class="travel bicycle" data-id="bicycling" data-value="BICYCLING" onclick="getTravelMode(this);"><span>A</span></li> -->
          </ul>

          <div class="location-info-block">
            <div id="directions-el" class="location-info">
              <div class="widget-directions-searchbox-handle">
                <div class="widget-directions-icon waypoint-handle"><label for="origin">A</label></div>
                <div class="widget-directions-icon waypoint-to"><label for="origin">C</label></div>
                <div class="widget-directions-icon waypoint-bullet"><label for="origin">B</label></div>
              </div>
              <div class="form-inputs">
                  <input class="form-control customer-location start" type="text" autocomplete="on" id="startText" onFocus="geolocate()" placeholder="Enter a Location to Search">
                  <input id='sourceLat' type="hidden">
                  <input id='sourceLang' type="hidden">
                  <input class="form-control store-location end" id='endText' readonly type="text" autocomplete="off">
                  <input id='destinationLat' type="hidden">
                  <input id='destinationLang' type="hidden">
              </div>
              <!-- <div class="widget-directions-right-overlay">
                <button type="button" class="swap-locations" title="<?php echo __('Swap locations A-B') ?>" onclick="addressSwap();"><?php echo __('Swap locations A-B') ?>
                </button>
              </div> -->
              <div class="directions-panel"></div>
            </div>
            <div class="box-input">
                <button title="Go" class="button btn btn-show btn-go-direction" onclick="getSourceAddressLatLong();">
                    <span><?php echo __('Go') ?></span>
                </button>
            </div>
          </div>
      </div>
    </div>
  </div>
</div>
<div style="clear:both;"></div>

